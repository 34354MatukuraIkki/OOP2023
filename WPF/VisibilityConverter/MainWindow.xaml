<Window x:Class="VisibilityConverter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VisibilityConverter"
        mc:Ignorable="d"
        Title="MainWindow" Height="250" Width="300" Loaded="Window_Loaded">
    <Window.Resources>
        <DataTemplate DataType="{x:Type local:ColorViewModel}">
            <StackPanel Orientation="Horizontal">
                <Border Width="20" Height="Auto" Margin="5,0" BorderThickness="1" BorderBrush="Black"  >
                    <Border.Background>
                        <SolidColorBrush Color="{Binding Color}"/>
                    </Border.Background>
                    <!--<Rectangle Width="12" Height="12">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding Color}"/>
                        </Rectangle.Fill>
                    </Rectangle>-->
                </Border>
                <TextBlock Margin="2" Text="{Binding Name}"/>
            </StackPanel>
        </DataTemplate>

        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="50,0,50,0" Opacity="0.5">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <StackPanel>
        <StackPanel.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </StackPanel.Resources>

        <CheckBox x:Name="CheckBox" Content="設定大項目"/>
        <StackPanel Visibility="{Binding IsChecked, ElementName=CheckBox,
                                    Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Margin="20,0,0,0">
            <RadioButton Content="設定小項目１"/>
            <RadioButton Content="設定小項目２"/>
            <RadioButton Content="設定小項目３"/>
        </StackPanel>
        <Button Margin="10" Content="ボタン１" Background="{DynamicResource ButtonBrushKey}" Template="{DynamicResource ButtonBaseControlTemplate1}"/>
        <Button Margin="10" Content="ボタン２" Background="{StaticResource ButtonBrushKey}"/>
        <Button Margin="10" Content="リソース変更" Click="Button_Click"/>
        <ComboBox x:Name="cbColors" ItemsSource="{x:Static local:ColorViewModel.ColorList}"/>
    </StackPanel>
</Window>
